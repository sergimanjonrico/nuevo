/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/12.0.12
 * Generated at: 2024-11-13 15:47:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.advanced;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.eclipse.help.internal.webapp.data.*;
import org.eclipse.help.webapp.*;

public final class searchScoped_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/advanced/darkTheme.css", Long.valueOf(1725338750000L));
    _jspx_dependants.put("/advanced/header.jsp", Long.valueOf(1725338750000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(7);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("org.eclipse.help.webapp");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("org.eclipse.help.internal.webapp.data");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');
 
request.setCharacterEncoding("UTF-8");
boolean isRTL = UrlUtil.isRTL(request, response);
String  direction = isRTL?"rtl":"ltr";

      out.write(" \n");
      out.write(" <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Frameset//EN\" \"http://www.w3.org/TR/html4/frameset.dtd\">\n");
      out.write("<!--\n");
      out.write(" ! Copyright (c) 2000, 2018 IBM Corporation and others.\n");
      out.write(" !\n");
      out.write(" ! This program and the accompanying materials \n");
      out.write(" ! are made available under the terms of the Eclipse Public License 2.0\n");
      out.write(" ! which accompanies this distribution, and is available at\n");
      out.write(" ! https://www.eclipse.org/legal/epl-2.0/\n");
      out.write(" !\n");
      out.write(" ! SPDX-License-Identifier: EPL-2.0\n");
      out.write(" ! \n");
      out.write(" ! Contributors:\n");
      out.write(" !     IBM Corporation - initial API and implementation\n");
      out.write(" -->");
      out.write('\n');
      out.write('\n');
 
	SearchData data = new SearchData(application, request, response);
	WebappPreferences prefs = data.getPrefs();

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html lang=\"");
      out.print(ServletResources.getString("locale", request));
      out.write("\">\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n");
      out.write("\n");
      out.write("<title>");
      out.print(ServletResources.getString("SearchLabel", request));
      out.write("</title>\n");
      out.write("     \n");
      out.write("<style type=\"text/css\">\n");
      out.write("/* need this one for Mozilla */\n");
      out.write("HTML { \n");
      out.write("	width:100%;\n");
      out.write("	height:100%;\n");
      out.write("	margin:0px;\n");
      out.write("	padding:0px;\n");
      out.write("	border:0px;\n");
      out.write(" }\n");
      out.write("\n");
      out.write("BODY {\n");
      out.write("	background:");
      out.print(prefs.getToolbarBackground());
      out.write(";\n");
      out.write("	border:0px;\n");
      out.write("	height:100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write("TABLE {\n");
      out.write("	background:");
      out.print(prefs.getToolbarBackground());
      out.write(";\n");
      out.write("	font: ");
      out.print(prefs.getToolbarFont());
      out.write(";\n");
      out.write("	font-size: .875rem;\n");
      out.write("	margin: 0px;\n");
      out.write("	padding: 0px;\n");
      out.write("	height:100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write("FORM {\n");
      out.write("	background:");
      out.print(prefs.getToolbarBackground());
      out.write(";\n");
      out.write("	height:100%;\n");
      out.write("	margin:0px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("INPUT {\n");
      out.write("	font: ");
      out.print(prefs.getToolbarFont());
      out.write(";\n");
      out.write("	font-size: .875rem;\n");
      out.write("	margin:0px;\n");
      out.write("	padding:0px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("A {\n");
      out.write("	color:WindowText;\n");
      out.write("	text-decoration:none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#searchTD {\n");
      out.write("	padding-");
      out.print(isRTL?"right":"left");
      out.write(":7px;\n");
      out.write("	padding-");
      out.print(isRTL?"left":"right");
      out.write(":4px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#searchWord {\n");
      out.write("	margin-left:5px;\n");
      out.write("	margin-right:5px;\n");
      out.write("	border:1px solid ThreeDShadow;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#searchLabel {\n");
      out.write("	color:WindowText;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#go {\n");
 
    if (data.isMacMozilla()) {

      out.write("\n");
      out.write("    background:GrayText;\n");
 
    } else {

      out.write("\n");
      out.write("    background:ThreeDShadow;\n");

    }

      out.write("\n");
      out.write("	color:Window;\n");
      out.write("	font-weight:bold;\n");
      out.write("	border:1px solid ThreeDShadow;\n");
      out.write("	margin-left:1px;\n");
      out.write("	font-size: 1.0em;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#scopeLabel {\n");
      out.write("	text-decoration:underline; \n");
      out.write("	color:#005FFF; \n");
      out.write("	cursor:pointer;\n");
      out.write("	padding-left:15px;   /* This should be the same for both RTL and LTR. */\n");
      out.write("}\n");
      out.write("\n");
      out.write("#scope { \n");
      out.write("	text-align:");
      out.print(isRTL?"left":"right");
      out.write(";\n");
      out.write("	margin-");
      out.print(isRTL?"right":"left");
      out.write(":5px;\n");
      out.write("	border:0px;\n");
      out.write("	color:WindowText;\n");
      out.write("	text-decoration:none;\n");
      out.write("}\n");
      out.write("\n");

	if (data.isIE()) {

      out.write("\n");
      out.write("#go {\n");
      out.write("	padding-");
      out.print(isRTL?"right":"left");
      out.write(":1px;\n");
      out.write("}\n");

	}

      out.write('\n');
      out.write("@media (prefers-color-scheme: dark) {\n");
      out.write("	body { \n");
      out.write("		color: #f0f0f0; \n");
      out.write("		background: #3d3d3d;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	#titleText,\n");
      out.write("	#searchLabel,\n");
      out.write("	#scopeLabel,\n");
      out.write("	#scope,\n");
      out.write("	a,\n");
      out.write("	a.active\n");
      out.write("	a.nolink:link, \n");
      out.write("	a.nolink:visited {\n");
      out.write("		color:#ffffff;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	.button a:hover, .buttonMenu a:hover { \n");
      out.write("		border-top:1px solid #3d3d3d; \n");
      out.write("		border-");
      out.print(isRTL?"right":"left");
      out.write(":1px solid #3d3d3d; \n");
      out.write("		border-");
      out.print(isRTL?"left":"right");
      out.write(":1px solid #3d3d3d; \n");
      out.write("		border-bottom:1px solid #3d3d3d;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	table {\n");
      out.write("		background:#3d3d3d;\n");
      out.write("	}\n");
      out.write("	.tab {\n");
      out.write("		background:#7b7c7b\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	form {\n");
      out.write("		background:#3d3d3d;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.separator {\n");
      out.write("\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	input{\n");
      out.write("		background:#a0a0a0;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	.button a, .buttonMenu a { \n");
      out.write("		border:1px solid #3d3d3d;;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	/* darken images to add some comfort while reading in dark theme */\n");
      out.write("	img {\n");
      out.write("		opacity: .75;\n");
      out.write("		transition: opacity .5s ease-in-out;\n");
      out.write("	}\n");
      out.write("	img:hover {\n");
      out.write("		opacity: 1;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	.location, .location a {\n");
      out.write("		color:#00cc66;\n");
      out.write("	}\n");
      out.write("}");
      out.write("\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("var isIE = navigator.userAgent.indexOf('MSIE') != -1;\n");
      out.write("var isMozilla = navigator.userAgent.toLowerCase().indexOf('mozilla') != -1 && parseInt(navigator.appVersion.substring(0,1)) >= 5;\n");
      out.write("\n");
      out.write("var advancedDialog;\n");
      out.write("\n");
      out.write("function openAdvanced() \n");
      out.write("{ \n");
      out.write("    var scope = document.getElementById(\"scope\").firstChild;\n");
      out.write("    var workingSet = \"\"; \n");
      out.write("    if (scope != null) \n");
      out.write("              workingSet = document.getElementById(\"scope\").firstChild.nodeValue;                \n");
      out.write("    var minSize = 300; \n");
      out.write("    var maxHeight= 500;  \n");
      out.write("    var maxWidth = 600;       \n");
      out.write("    var w = minSize; \n");
      out.write("    var h = minSize; \n");
      out.write("      \n");
      out.write("    // If we have large fonts make the dialog larger, up to 500 pixels high, 600 wide\n");
      out.write("    try {         \n");
      out.write("        var letterHeight = document.getElementById(\"searchWord\").offsetHeight; \n");
      out.write("        var requiredSize = 16 * letterHeight; \n");
      out.write("        if (requiredSize > minSize) { \n");
      out.write("            if (requiredSize < maxWidth) { \n");
      out.write("                w = requiredSize; \n");
      out.write("            } else { \n");
      out.write("                w =  maxWidth; \n");
      out.write("            }\n");
      out.write("            if (requiredSize < maxHeight) { \n");
      out.write("                h = requiredSize; \n");
      out.write("            } else {               \n");
      out.write("                h = maxHeight;\n");
      out.write("            }\n");
      out.write("        } \n");
      out.write("             \n");
      out.write("    } catch (e) {} \n");
      out.write("    \n");

if (data.isIE()){

      out.write("\n");
      out.write("	var l = parent.screenLeft + (parent.document.body.clientWidth - w) / 2;\n");
      out.write("	var t = parent.screenTop + (parent.document.body.clientHeight - h) / 2;\n");

} else {

      out.write("\n");
      out.write("	var l = parent.screenX + (parent.innerWidth - w) / 2;\n");
      out.write("	var t = parent.screenY + (parent.innerHeight - h) / 2;\n");

}

      out.write("\n");
      out.write("	// move the dialog just a bit higher than the middle\n");
      out.write("	if (t-50 > 0) t = t-50;\n");
      out.write("	\n");
      out.write("	window.location=\"javascript://needModal\";\n");
      out.write("	advancedDialog = window.open(\"workingSetManager.jsp?workingSet=\"+encodeURIComponent(workingSet), \"advancedDialog\", \"resizable=yes,height=\"+h+\",width=\"+w+\",left=\"+l+\",top=\"+t );\n");
      out.write("	advancedDialog.focus(); \n");
      out.write("}\n");
      out.write("\n");
      out.write("function closeAdvanced()\n");
      out.write("{\n");
      out.write("	try {\n");
      out.write("		if (advancedDialog)\n");
      out.write("			advancedDialog.close();\n");
      out.write("	}\n");
      out.write("	catch(e) {}\n");
      out.write("}\n");
      out.write("\n");
      out.write("/**\n");
      out.write(" * This function can be called from this page or from\n");
      out.write(" * the advanced search page. When called from the advanced\n");
      out.write(" * search page, a query is passed.\n");
      out.write(" * noRefocus is a boolean which if true suppresses\n");
      out.write(" * switch of focus to the search view\n");
      out.write(" */\n");
      out.write("function doSearch(query, noRefocus)\n");
      out.write("{\n");
      out.write("	var workingSet = document.getElementById(\"scope\").firstChild.nodeValue;\n");
      out.write("\n");
      out.write("	var form = document.forms[\"searchForm\"];\n");
      out.write("	var searchWord = form.searchWord.value;\n");
      out.write("	var maxHits = form.maxHits.value;\n");
      out.write("	if (!searchWord || searchWord == \"\")\n");
      out.write("		return;\n");
      out.write("	query =\"searchWord=\"+encodeURIComponent(searchWord)+\"&maxHits=\"+maxHits;\n");
      out.write("	if (workingSet != '");
      out.print(UrlUtil.JavaScriptEncode(ServletResources.getString("All", request)));
      out.write("')\n");
      out.write("		query = query +\"&scope=\"+encodeURIComponent(workingSet);\n");
      out.write("		\n");
      out.write("	/******** HARD CODED VIEW NAME *********/\n");
      out.write("	// do some tests to ensure the results are available\n");
      out.write("	if (parent.parent.HelpFrame && \n");
      out.write("		parent.parent.HelpFrame.NavFrame && \n");
      out.write("		parent.parent.HelpFrame.NavFrame.showView &&\n");
      out.write("		parent.parent.HelpFrame.NavFrame.ViewsFrame && \n");
      out.write("		parent.parent.HelpFrame.NavFrame.ViewsFrame.search && \n");
      out.write("		parent.parent.HelpFrame.NavFrame.ViewsFrame.search.searchViewFrame) \n");
      out.write("	{\n");
      out.write("	    if (!noRefocus) {\n");
      out.write("		    parent.parent.HelpFrame.NavFrame.showView(\"search\");\n");
      out.write("		}\n");
      out.write("		var searchView = parent.parent.HelpFrame.NavFrame.ViewsFrame.search.searchViewFrame;\n");
      out.write("		searchView.location.replace(\"searchView.jsp?\"+query);\n");
      out.write("	}\n");
      out.write("}\n");
      out.write("\n");
      out.write("function getSearchWord() {\n");
      out.write("    var form = document.forms[\"searchForm\"];\n");
      out.write("    var searchWord = form.searchWord.value;\n");
      out.write("    if (searchWord ) {\n");
      out.write("        return searchWord;\n");
      out.write("    }\n");
      out.write("    return \"\";\n");
      out.write("}\n");
      out.write("\n");
      out.write("function rescope() {\n");
      out.write("    if (parent.parent.HelpFrame && \n");
      out.write("		parent.parent.HelpFrame.NavFrame && \n");
      out.write("		parent.parent.HelpFrame.NavFrame.ViewsFrame) {\n");
      out.write("		var viewsFrame = parent.parent.HelpFrame.NavFrame.ViewsFrame;\n");
      out.write("		if (viewsFrame.toc && viewsFrame.toc.tocViewFrame) {\n");
      out.write("		    var tocView = viewsFrame.toc.tocViewFrame;\n");
      out.write("		    tocView.repaint();\n");
      out.write("		}\n");
      out.write("		if (viewsFrame.index && viewsFrame.index.indexViewFrame) {\n");
      out.write("		    var indexView = viewsFrame.index.indexViewFrame;\n");
      out.write("		    indexView.repaint();\n");
      out.write("		}\n");
      out.write("		doSearch(null, true);\n");
      out.write("	}\n");
      out.write("}\n");
      out.write("\n");
      out.write("function fixHeights()\n");
      out.write("{\n");
      out.write("	if (!isIE) return;\n");
      out.write("	\n");
      out.write("	var h = document.getElementById(\"searchWord\").offsetHeight;\n");
      out.write("	document.getElementById(\"go\").style.height = h;\n");
      out.write("}\n");
      out.write("\n");
      out.write("function onloadHandler(e)\n");
      out.write("{\n");
      out.write("	var form = document.forms[\"searchForm\"];\n");
      out.write("	form.searchWord.value = '");
      out.print(UrlUtil.JavaScriptEncode(data.getSearchWord()));
      out.write("';\n");
      out.write("	fixHeights();\n");

    if (data.isScopeRequest() && RequestScope.filterBySearchScope(request)) {

      out.write("\n");
      out.write("    rescope();\n");

    }

      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body dir=\"");
      out.print(direction);
      out.write("\" onload=\"onloadHandler()\"  onunload=\"closeAdvanced()\">\n");
      out.write("\n");
      out.write("	<form  name=\"searchForm\"   onsubmit=\"doSearch()\">\n");
      out.write("	<div role=\"search\">\n");
      out.write("		<table id=\"searchTable\" align=\"");
      out.print(isRTL?"right":"left");
      out.write("\" valign=\"middle\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\" role=\"presentation\">\n");
      out.write("			<tr nowrap  valign=\"middle\">\n");
      out.write("				<td ");
      out.print(isRTL?"nowrap":"");
      out.write(" id=\"searchTD\">\n");
      out.write("					<label id=\"searchLabel\" for=\"searchWord\" accesskey=\"");
      out.print(ServletResources.getAccessKey("SearchLabel", request));
      out.write("\">\n");
      out.write("					&nbsp;");
      out.print(ServletResources.getLabel("SearchLabel", request));
      out.write("\n");
      out.write("					</label>\n");
      out.write("				</td>\n");
      out.write("				<td>\n");
      out.write("					<input type=\"text\" id=\"searchWord\" name=\"searchWord\" value='' size=\"24\" maxlength=\"256\" \n");
      out.write("					       alt=\"");
      out.print(UrlUtil.htmlEncode(ServletResources.getString("expression_label", request)));
      out.write("\" \n");
      out.write("					       title=\"");
      out.print(UrlUtil.htmlEncode(ServletResources.getString("expression_label", request)));
      out.write("\">\n");
      out.write("				</td>\n");
      out.write("				<td >\n");
      out.write("					<input type=\"submit\" role=\"button\" onclick=\"this.blur();doSearch()\" value=\"");
      out.print(ServletResources.getString("GO", request));
      out.write("\" id=\"go\" alt=\"");
      out.print(ServletResources.getString("GO", request));
      out.write("\" title=\"");
      out.print(ServletResources.getString("GO", request));
      out.write("\">\n");
      out.write("					<input type=\"hidden\" name=\"maxHits\" value=\"500\" >\n");
      out.write("				</td>\n");
      out.write("				<td nowrap>\n");
      out.write("					<a id=\"scopeLabel\" href=\"javascript:openAdvanced();\" title=\"");
      out.print(ServletResources.getString("ScopeTooltip", request));
      out.write("\" alt=\"");
      out.print(ServletResources.getString("ScopeTooltip", request));
      out.write("\" onmouseover=\"window.status='");
      out.print(UrlUtil.JavaScriptEncode(ServletResources.getString("ScopeTooltip", request)));
      out.write("'; return true;\" onmouseout=\"window.status='';\">");
      out.print(ServletResources.getLabel("Scope", request));
      out.write("</a>\n");
      out.write("				</td>\n");
      out.write("				<td nowrap>\n");
      out.write("					<input type=\"hidden\" name=\"workingSet\" value='");
      out.print(UrlUtil.htmlEncode(data.getScope()));
      out.write("'>\n");
      out.write("					<div id=\"scope\" >");
      out.print(UrlUtil.htmlEncode(data.getScope()));
      out.write("</div>\n");
      out.write("				</td>\n");
      out.write("			</tr>\n");
      out.write("\n");
      out.write("		</table>\n");
      out.write("	</div>\n");
      out.write("	</form>		\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
