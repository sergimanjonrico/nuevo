/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/12.0.12
 * Generated at: 2024-11-13 15:47:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.advanced;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.eclipse.help.internal.webapp.data.*;
import org.eclipse.help.webapp.*;

public final class tabs_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/advanced/darkTheme.css", Long.valueOf(1725338750000L));
    _jspx_dependants.put("/advanced/header.jsp", Long.valueOf(1725338750000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(7);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("org.eclipse.help.webapp");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("org.eclipse.help.internal.webapp.data");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');
 
request.setCharacterEncoding("UTF-8");
boolean isRTL = UrlUtil.isRTL(request, response);
String  direction = isRTL?"rtl":"ltr";

      out.write(" \n");
      out.write(" <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Frameset//EN\" \"http://www.w3.org/TR/html4/frameset.dtd\">\n");
      out.write("<!--\n");
      out.write(" ! Copyright (c) 2000, 2018 IBM Corporation and others.\n");
      out.write(" !\n");
      out.write(" ! This program and the accompanying materials \n");
      out.write(" ! are made available under the terms of the Eclipse Public License 2.0\n");
      out.write(" ! which accompanies this distribution, and is available at\n");
      out.write(" ! https://www.eclipse.org/legal/epl-2.0/\n");
      out.write(" !\n");
      out.write(" ! SPDX-License-Identifier: EPL-2.0\n");
      out.write(" ! \n");
      out.write(" ! Contributors:\n");
      out.write(" !     IBM Corporation - initial API and implementation\n");
      out.write(" -->");
      out.write('\n');
      out.write('\n');
 
	LayoutData data = new LayoutData(application,request, response);
	WebappPreferences prefs = data.getPrefs();
	AbstractView[] views = data.getViews();

      out.write("\n");
      out.write("\n");
      out.write("<html lang=\"");
      out.print(ServletResources.getString("locale", request));
      out.write("\">\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("\n");
      out.write("<title>");
      out.print(ServletResources.getString("Tabs", request));
      out.write("</title>\n");
      out.write("    \n");
      out.write("<style type=\"text/css\">\n");
      out.write("\n");
      out.write("\n");
      out.write("BODY {\n");
      out.write("	margin:0px;\n");
      out.write("	padding:0px;\n");
      out.write("	height:100%;\n");
 
if (data.isMozilla()){

      out.write("\n");
      out.write("	height:21px;\n");

}

      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("a {\n");
      out.write("    cursor : default\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* tabs at the bottom */\n");
      out.write(".tab {\n");
      out.write("	font-size:5px;");
      out.write("\n");
      out.write("	margin:0px;\n");
      out.write("	padding:0px;\n");
      out.write("	border-top:1px solid ThreeDShadow;\n");
      out.write("	border-bottom:1px solid ");
      out.print(data.isMozilla()?prefs.getToolbarBackground():"ThreeDShadow");
      out.write(";\n");
      out.write("	cursor:default;\n");
      out.write("	background:");
      out.print(prefs.getToolbarBackground());
      out.write(";\n");
      out.write("}\n");
      out.write("\n");
      out.write(".pressed {\n");
      out.write("	font-size:5px;");
      out.write("\n");
      out.write("	margin:0px;\n");
      out.write("	padding:0px;\n");
      out.write("	cursor:default;\n");
      out.write("	");
      out.print(prefs.getViewBackgroundStyle());
      out.write("\n");
      out.write("	border-top:0px solid ");
      out.print(prefs.getToolbarBackground());
      out.write(";\n");
      out.write("	border-bottom:1px solid ThreeDShadow;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".separator {\n");
      out.write("	height:100%;\n");
      out.write("	background-color:ThreeDShadow;\n");
      out.write("	border-bottom:1px solid ");
      out.print(prefs.getToolbarBackground());
      out.write(";\n");
      out.write("}\n");
      out.write("\n");
      out.write(".separator_pressed {\n");
      out.write("	height:100%;\n");
      out.write("	background-color:ThreeDShadow;\n");
      out.write("	border-top:0px solid ");
      out.print(prefs.getToolbarBackground());
      out.write(";\n");
      out.write("	border-bottom:1px solid ");
      out.print(prefs.getToolbarBackground());
      out.write(";\n");
      out.write("}\n");
      out.write("\n");
      out.write("A {\n");
      out.write("	text-decoration:none;\n");
      out.write("	vertical-align:middle;\n");
      out.write("	height:16px;\n");
      out.write("	width:16px;\n");
 
if (data.isIE()){

      out.write("\n");
      out.write("	writing-mode:tb-rl; ");
      out.write('\n');

} else {

      out.write("\n");
      out.write("	display:block;");
      out.write('\n');

}

      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("IMG {\n");
      out.write("	border:0px;\n");
      out.write("	margin:0px;\n");
      out.write("	padding:0px;\n");
      out.write("	height:16px;\n");
      out.write("	width:16px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("@media (prefers-color-scheme: dark) {\n");
      out.write("	body { \n");
      out.write("		color: #f0f0f0; \n");
      out.write("		background: #3d3d3d;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	#titleText,\n");
      out.write("	#searchLabel,\n");
      out.write("	#scopeLabel,\n");
      out.write("	#scope,\n");
      out.write("	a,\n");
      out.write("	a.active\n");
      out.write("	a.nolink:link, \n");
      out.write("	a.nolink:visited {\n");
      out.write("		color:#ffffff;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	.button a:hover, .buttonMenu a:hover { \n");
      out.write("		border-top:1px solid #3d3d3d; \n");
      out.write("		border-");
      out.print(isRTL?"right":"left");
      out.write(":1px solid #3d3d3d; \n");
      out.write("		border-");
      out.print(isRTL?"left":"right");
      out.write(":1px solid #3d3d3d; \n");
      out.write("		border-bottom:1px solid #3d3d3d;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	table {\n");
      out.write("		background:#3d3d3d;\n");
      out.write("	}\n");
      out.write("	.tab {\n");
      out.write("		background:#7b7c7b\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	form {\n");
      out.write("		background:#3d3d3d;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.separator {\n");
      out.write("\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	input{\n");
      out.write("		background:#a0a0a0;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	.button a, .buttonMenu a { \n");
      out.write("		border:1px solid #3d3d3d;;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	/* darken images to add some comfort while reading in dark theme */\n");
      out.write("	img {\n");
      out.write("		opacity: .75;\n");
      out.write("		transition: opacity .5s ease-in-out;\n");
      out.write("	}\n");
      out.write("	img:hover {\n");
      out.write("		opacity: 1;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	.location, .location a {\n");
      out.write("		color:#00cc66;\n");
      out.write("	}\n");
      out.write("}");
      out.write("\n");
      out.write("</style>\n");
      out.write(" \n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("var isMozilla = navigator.userAgent.indexOf('Mozilla') != -1 && parseInt(navigator.appVersion.substring(0,1)) >= 5;\n");
      out.write("var isIE = navigator.userAgent.indexOf('MSIE') != -1;\n");
      out.write("var linksArray = new Array (\"linktoc\", \"linkindex\", \"linksearch\", \"linkbookmarks\");\n");
      out.write("\n");
      out.write("if (isIE){\n");
      out.write("  document.onkeydown = keyDownHandler;\n");
      out.write("} else {\n");
      out.write("  document.addEventListener('keydown', keyDownHandler, true);\n");
      out.write("}\n");
      out.write("\n");
      out.write("/**\n");
      out.write(" * Returns the target node of an event\n");
      out.write(" */\n");
      out.write("function getTarget(e) {\n");
      out.write("	var target;\n");
      out.write("  	if (isIE)\n");
      out.write("   		target = window.event.srcElement;\n");
      out.write("  	else\n");
      out.write("  		target = e.target;\n");
      out.write("\n");
      out.write("	return target;\n");
      out.write("}\n");
      out.write("\n");

for (int i=0; i<views.length; i++) {
    if (views[i].isVisible()) {

      out.write("\n");
      out.write("	var ");
      out.print(views[i].getName());
      out.write(" = new Image();\n");
      out.write("	");
      out.print(views[i].getName());
      out.write(".src = \"");
      out.print(data.getImageURL(views[i]));
      out.write('"');
      out.write(';');
      out.write('\n');

    }
}

      out.write("\n");
      out.write("\n");
      out.write("var lastTab = \"\";\n");
      out.write("/* \n");
      out.write(" * Switch tabs.\n");
      out.write(" */ \n");
      out.write("function showTab(tab)\n");
      out.write("{ 	\n");
      out.write("	if (tab == lastTab) \n");
      out.write("		return;\n");
      out.write("	\n");
      out.write("	lastTab = tab;\n");
      out.write("	\n");
      out.write(" 	// show the appropriate pressed tab\n");
      out.write("  	var buttons = document.body.getElementsByTagName(\"TD\");\n");
      out.write("  	for (var i=0; i<buttons.length; i++)\n");
      out.write("  	{\n");
      out.write("  		if (buttons[i].id == tab) { \n");
      out.write("			buttons[i].className = \"pressed\";\n");
      out.write("			if (i > 0) \n");
      out.write("				buttons[i-1].className = \"separator_pressed\";\n");
      out.write("			if (i<buttons.length-1) \n");
      out.write("				buttons[i+1].className = \"separator_pressed\";\n");
      out.write("		} else if (buttons[i].className == \"pressed\") {\n");
      out.write("			buttons[i].className = \"tab\";\n");
      out.write("			if (i > 0) \n");
      out.write("				if (i > 1 && buttons[i-2].id == tab) \n");
      out.write("					buttons[i-1].className = \"separator_pressed\";\n");
      out.write("				else\n");
      out.write("					buttons[i-1].className = \"separator\";\n");
      out.write("			if (i<buttons.length-1) \n");
      out.write("				if (i<buttons.length-2 && buttons[i+2].id == tab) \n");
      out.write("					buttons[i+1].className = \"separator_pressed\";\n");
      out.write("				else\n");
      out.write("					buttons[i+1].className = \"separator\";\n");
      out.write("		}\n");
      out.write(" 	 }\n");
      out.write("}\n");
      out.write("\n");
      out.write("/**\n");
      out.write(" * Handler for key down (arrows)\n");
      out.write(" */\n");
      out.write("function keyDownHandler(e)\n");
      out.write("{\n");
      out.write("	var key;\n");
      out.write("\n");
      out.write("	if (isIE) {\n");
      out.write("		key = window.event.keyCode;\n");
      out.write("	} else {\n");
      out.write("		key = e.keyCode;\n");
      out.write("	}\n");
      out.write("		\n");
      out.write("	if (key <37 || key > 39) \n");
      out.write("		return true;\n");
      out.write("	\n");
      out.write("  	var clickedNode = getTarget(e);\n");
      out.write("  	if (!clickedNode) return true;\n");
      out.write("\n");
      out.write("	var linkId=\"\";\n");
      out.write("	if (clickedNode.tagName == 'A')\n");
      out.write("		linkId=clickedNode.id;\n");
      out.write("	else if(clickedNode.tagName == 'TD')\n");
      out.write("		linkId=\"link\"+clickedNode.id;\n");
      out.write("\n");
      out.write("  	if (isIE)\n");
      out.write("  		window.event.cancelBubble = true;\n");
      out.write("  	else\n");
      out.write("  		e.cancelBubble = true;\n");
      out.write("  	if (key == 38 ) { // up arrow\n");
      out.write("		if(linkId.length>4){\n");
      out.write("			parent.showView(linkId.substring(4, linkId.length));\n");
      out.write("			clickedNode.blur();\n");
      out.write("			parent.frames.ViewsFrame.focus();\n");
      out.write("		}\n");
      out.write("  	} else if (key == 39) { // Right arrow, expand\n");
      out.write("  		var nextLink=getNextLink(linkId);\n");
      out.write("		if(nextLink!=null){\n");
      out.write("			document.getElementById(nextLink).focus();\n");
      out.write("		}\n");
      out.write("  	} else if (key == 37) { // Left arrow,collapse\n");
      out.write("   		var previousLink=getPreviousLink(linkId);\n");
      out.write("		if(previousLink!=null){\n");
      out.write("			document.getElementById(previousLink).focus();\n");
      out.write("		}\n");
      out.write(" 	}\n");
      out.write("  	 			\n");
      out.write("  	return false;\n");
      out.write("}\n");
      out.write("\n");
      out.write("function getNextLink(currentLink){\n");
      out.write("	for(i=0; i<linksArray.length; i++){\n");
      out.write("		if(currentLink==linksArray[i]){\n");
      out.write("			if((i+1)<linksArray.length)\n");
      out.write("				return linksArray[i+1];\n");
      out.write("		}\n");
      out.write("	}\n");
      out.write("	return linksArray[0];\n");
      out.write("}\n");
      out.write("\n");
      out.write("function getPreviousLink(currentLink){\n");
      out.write("	for(i=0; i<linksArray.length; i++){\n");
      out.write("		if(currentLink==linksArray[i]){\n");
      out.write("			if(i>0)\n");
      out.write("				 return linksArray[i-1];\n");
      out.write("		}\n");
      out.write("	}\n");
      out.write("	return linksArray[linksArray.length-1];\n");
      out.write("}\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("   \n");
      out.write("<body dir=\"");
      out.print(direction);
      out.write("\" onload=\"showTab('");
      out.print(data.getVisibleView());
      out.write("')\">\n");
      out.write("\n");
      out.write("  <table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\" height=\"100%\" valign=\"middle\">\n");
      out.write("   <tr>\n");
      out.write("\n");

	for (int i=0; i<views.length; i++) 
	{
	    if (views[i].isVisible()) {
		    String title = data.getTitle(views[i]);
		    if (i != 0) {

      out.write("\n");
      out.write("	<td width=\"1px\" class=\"separator\"><div style=\"width:1px;height:1px;display:block;\"></div></td>\n");
      out.write("	");
      out.write('\n');

		    }

      out.write("\n");
      out.write("	<td  title=\"");
      out.print(UrlUtil.htmlEncode(title));
      out.write("\" \n");
      out.write("	     align=\"center\"  \n");
      out.write("	     valign=\"middle\"\n");
      out.write("	     class=\"tab\" \n");
      out.write("	     id=\"");
      out.print(views[i].getName());
      out.write("\" \n");
      out.write("	     onclick=\"parent.showView('");
      out.print(views[i].getName());
      out.write("')\" \n");
      out.write("	     onmouseover=\"window.status='");
      out.print(UrlUtil.JavaScriptEncode(title));
      out.write("';return true;\" \n");
      out.write("	     onmouseout=\"window.status='';\">\n");
      out.write("	     <a  href='javascript:parent.showView(\"");
      out.print(views[i].getName());
      out.write("\");' \n");
      out.write("	         onclick='this.blur();return false;' \n");
      out.write("	         onmouseover=\"window.status='");
      out.print(UrlUtil.JavaScriptEncode(title));
      out.write("';return true;\" \n");
      out.write("	         onmouseout=\"window.status='';\"\n");
      out.write("	         id=\"link");
      out.print(views[i].getName());
      out.write("\"\n");
      out.write("	         ");
      out.print(views[i].getKey()==View.NO_SHORTCUT?"":"ACCESSKEY=\""+views[i].getKey()+"\"");
      out.write(">\n");
      out.write("	         <img alt=\"");
      out.print(UrlUtil.htmlEncode(title));
      out.write("\" \n");
      out.write("	              title=\"");
      out.print(UrlUtil.htmlEncode(title));
      out.write("\" \n");
      out.write("	              src=\"");
      out.print(data.getImageURL(views[i]));
      out.write("\"\n");
      out.write("	              id=\"img");
      out.print(views[i].getName());
      out.write("\"\n");
      out.write("	              height=\"16\"\n");
      out.write("	         >\n");
      out.write("	     </a>\n");
      out.write("	</td>\n");

        }
	}

      out.write("\n");
      out.write(" \n");
      out.write("   </tr>\n");
      out.write("   </table>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
