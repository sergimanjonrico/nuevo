/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/12.0.12
 * Generated at: 2024-11-13 15:47:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.advanced;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.eclipse.help.internal.search.SearchHit;
import org.eclipse.help.IUAElement;
import org.eclipse.help.IHelpResource;
import org.eclipse.help.internal.webapp.data.*;
import org.eclipse.help.webapp.*;

public final class searchView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/advanced/searchList.css", Long.valueOf(1725338750000L));
    _jspx_dependants.put("/advanced/darkTheme.css", Long.valueOf(1725338750000L));
    _jspx_dependants.put("/advanced/header.jsp", Long.valueOf(1725338750000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(7);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("org.eclipse.help.webapp");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("org.eclipse.help.internal.webapp.data");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("org.eclipse.help.IUAElement");
    _jspx_imports_classes.add("org.eclipse.help.internal.search.SearchHit");
    _jspx_imports_classes.add("org.eclipse.help.IHelpResource");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write('\n');
      out.write('\n');
 
request.setCharacterEncoding("UTF-8");
boolean isRTL = UrlUtil.isRTL(request, response);
String  direction = isRTL?"rtl":"ltr";

      out.write(" \n");
      out.write(" <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Frameset//EN\" \"http://www.w3.org/TR/html4/frameset.dtd\">\n");
      out.write("<!--\n");
      out.write(" ! Copyright (c) 2000, 2018 IBM Corporation and others.\n");
      out.write(" !\n");
      out.write(" ! This program and the accompanying materials \n");
      out.write(" ! are made available under the terms of the Eclipse Public License 2.0\n");
      out.write(" ! which accompanies this distribution, and is available at\n");
      out.write(" ! https://www.eclipse.org/legal/epl-2.0/\n");
      out.write(" !\n");
      out.write(" ! SPDX-License-Identifier: EPL-2.0\n");
      out.write(" ! \n");
      out.write(" ! Contributors:\n");
      out.write(" !     IBM Corporation - initial API and implementation\n");
      out.write(" -->");
      out.write('\n');
      out.write('\n');
 
	SearchData data = new SearchData(application, request, response);
	WebappPreferences prefs = data.getPrefs();

      out.write("\n");
      out.write("\n");
      out.write("<html lang=\"");
      out.print(ServletResources.getString("locale", request));
      out.write("\">\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<meta http-equiv=\"Pragma\" content=\"no-cache\">\n");
      out.write("<meta http-equiv=\"Expires\" content=\"-1\">\n");
      out.write("\n");
      out.write("<title>");
      out.print(ServletResources.getString("SearchResults", request));
      out.write("</title>\n");
      out.write("\n");
      out.write("<style type=\"text/css\">\n");
      out.write("/*******************************************************************************\n");
      out.write(" * Copyright (c) 2000, 2011 IBM Corporation and others.\n");
      out.write(" *\n");
      out.write(" * This program and the accompanying materials \n");
      out.write(" * are made available under the terms of the Eclipse Public License 2.0\n");
      out.write(" * which accompanies this distribution, and is available at\n");
      out.write(" * https://www.eclipse.org/legal/epl-2.0/\n");
      out.write(" *\n");
      out.write(" * SPDX-License-Identifier: EPL-2.0\n");
      out.write(" * \n");
      out.write(" * Contributors:\n");
      out.write(" *     IBM Corporation - initial API and implementation\n");
      out.write(" *******************************************************************************/\n");
      out.write("\n");
      out.write("body {\n");
      out.write("    ");
      out.print(prefs.getViewBackgroundStyle());
      out.write("\n");
      out.write("	color: WindowText;\n");
      out.write("	font: ");
      out.print(prefs.getViewFont());
      out.write(";\n");
      out.write("	font-size: .875rem;\n");
      out.write("	padding: 0px;\n");
      out.write("	border: 0px;\n");
      out.write("	margin-top: 5px;\n");
      out.write("	margin-bottom: 8px;\n");
      out.write("	margin-left: 5px;\n");
      out.write("	margin-right: 5px;\n");
      out.write("	cursor: default;\n");
      out.write("}\n");
      out.write("\n");
      out.write("table {\n");
      out.write("	font: ");
      out.print(prefs.getViewFont());
      out.write(";\n");
      out.write("	font-size: .875rem;\n");
      out.write("	width: 100%;\n");
      out.write("	table-layout: fixed;\n");
      out.write("}\n");
      out.write("\n");
      out.write("a {\n");
      out.write("	text-decoration:none; \n");
      out.write("	padding:0px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("a:hover {\n");
      out.write("	text-decoration:underline; \n");
      out.write("}\n");
      out.write("\n");
      out.write(".category {\n");
      out.write("	font-weight: bold;\n");
      out.write("	margin-top: 5px;\n");
      out.write("	margin-bottom: 5px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".sectiontitle {\n");
      out.write("	background-color: ");
      out.print(prefs.getToolbarBackground());
      out.write(";\n");
      out.write("	font-weight:bold;\n");
      out.write("	margin-top:7px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".results .active { \n");
      out.write("	background:Highlight;\n");
      out.write("	color:HighlightText;\n");
      out.write("	width:100%;\n");
      out.write("	height:100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".showall {\n");
      out.write("    text-decoration:underline; \n");
      out.write("    color:#0066FF; \n");
      out.write("	cursor:pointer;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#menu {\n");
      out.write("	position:absolute;\n");
      out.write("	display:none;\n");
      out.write("	background:");
      out.print(prefs.getToolbarBackground());
      out.write(";\n");
      out.write("	border:2px outset;\n");
      out.write("	padding:2px 0px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".selectedMenuItem {\n");
      out.write("	background:Highlight;\n");
      out.write("	color:HighlightText;\n");
      out.write("	padding-left:10px;\n");
      out.write("	padding-right:10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".unselectedMenuItem {\n");
      out.write("	background:");
      out.print(prefs.getToolbarBackground());
      out.write(";\n");
      out.write("	color:WindowText;\n");
      out.write("	padding-left:10px;\n");
      out.write("	padding-right:10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".icon {\n");
      out.write("	width: 23px;\n");
      out.write("	padding-");
      out.print(isRTL?"right":"left");
      out.write(':');
      out.write(' ');
      out.print(data.isShowCategories() ? 3 : 0);
      out.write("px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".description {\n");
      out.write("	display: ");
      out.print(data.isShowDescriptions() ? "block" : "none");
      out.write(";\n");
      out.write("}\n");
      out.write(".location {\n");
      out.write("	display: ");
      out.print(data.isShowLocations() ? "block" : "none");
      out.write(";\n");
      out.write("	font-size:80%;\n");
      out.write("	overflow:visible;\n");
      out.write("	white-space:nowrap;\n");
      out.write("}\n");
      out.write(".location, .location a {\n");
      out.write("	color:#006633;\n");
      out.write("}\n");
      out.write(".active .location, .active .location a {\n");
      out.write("	color:HighlightText;\n");
      out.write("}\n");
      out.write("\n");
      out.write("@media (prefers-color-scheme: dark) {\n");
      out.write("	body { \n");
      out.write("		color: #f0f0f0; \n");
      out.write("		background: #3d3d3d;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	#titleText,\n");
      out.write("	#searchLabel,\n");
      out.write("	#scopeLabel,\n");
      out.write("	#scope,\n");
      out.write("	a,\n");
      out.write("	a.active\n");
      out.write("	a.nolink:link, \n");
      out.write("	a.nolink:visited {\n");
      out.write("		color:#ffffff;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	.button a:hover, .buttonMenu a:hover { \n");
      out.write("		border-top:1px solid #3d3d3d; \n");
      out.write("		border-");
      out.print(isRTL?"right":"left");
      out.write(":1px solid #3d3d3d; \n");
      out.write("		border-");
      out.print(isRTL?"left":"right");
      out.write(":1px solid #3d3d3d; \n");
      out.write("		border-bottom:1px solid #3d3d3d;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	table {\n");
      out.write("		background:#3d3d3d;\n");
      out.write("	}\n");
      out.write("	.tab {\n");
      out.write("		background:#7b7c7b\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	form {\n");
      out.write("		background:#3d3d3d;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.separator {\n");
      out.write("\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	input{\n");
      out.write("		background:#a0a0a0;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	.button a, .buttonMenu a { \n");
      out.write("		border:1px solid #3d3d3d;;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	/* darken images to add some comfort while reading in dark theme */\n");
      out.write("	img {\n");
      out.write("		opacity: .75;\n");
      out.write("		transition: opacity .5s ease-in-out;\n");
      out.write("	}\n");
      out.write("	img:hover {\n");
      out.write("		opacity: 1;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	.location, .location a {\n");
      out.write("		color:#00cc66;\n");
      out.write("	}\n");
      out.write("}");
      out.write('\n');
      out.write("\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("\n");
      out.write("<base target=\"ContentViewFrame\">\n");
      out.write("<script type=\"text/javascript\" src=\"utils.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"list.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"view.js\"></script>\n");
      out.write("<script type=\"text/javascript\">	\n");
      out.write("\n");
      out.write("var cookiesRequired = \"");
      out.print(UrlUtil.JavaScriptEncode(ServletResources.getString("cookiesRequired", request)));
      out.write("\";	\n");
      out.write("var showCategories = ");
      out.print(data.isShowCategories());
      out.write(";\n");
      out.write("var scope =\"");
      out.print(UrlUtil.JavaScriptEncode(data.getScope()));
      out.write("\";\n");
      out.write("\n");
      out.write("function refresh() { \n");
      out.write("	window.location.replace(\"searchView.jsp?");
      out.print(UrlUtil.JavaScriptEncode(request.getQueryString()));
      out.write("\");\n");
      out.write("}\n");
      out.write("\n");
      out.write("function isShowLocations() {\n");
      out.write("	var value = getCookie(\"showLocations\");\n");
      out.write("	return value ? value == \"true\" : ");
      out.print(data.isShowLocations());
      out.write(";\n");
      out.write("}\n");
      out.write("\n");
      out.write("function isShowDescriptions() {\n");
      out.write("	var value = getCookie(\"showDescriptions\");\n");
      out.write("	return value ? value == \"true\" : ");
      out.print(data.isShowDescriptions());
      out.write(";\n");
      out.write("}\n");
      out.write("\n");
      out.write("function setShowCategories(value) { 	    \n");
      out.write("	parent.searchToolbarFrame.setButtonState(\"show_categories\", value);\n");
      out.write("	var searchWord = \"");
      out.print(UrlUtil.JavaScriptEncode(data.getSearchWord()));
      out.write("\";\n");
      out.write("	    window.location=\"searchView.jsp?searchWord=\" + encodeURIComponent(searchWord) \n");
      out.write("	       + \"&showSearchCategories=\" + value +\n");
      out.write("	       \"&scope=\" + encodeURIComponent(scope);    \n");
      out.write("}\n");
      out.write("\n");
      out.write("function setShowLocations(value) {\n");
      out.write("	setCookie(\"showLocations\", value);\n");
      out.write("	var newValue = isShowLocations();\n");
      out.write("	parent.searchToolbarFrame.setButtonState(\"show_locations\", newValue);\n");
      out.write("	if (value != newValue) {\n");
      out.write("		alert(cookiesRequired);\n");
      out.write("	} else {\n");
      out.write("		setCSSRule(\".location\", \"display\", value ? \"block\" : \"none\");\n");
      out.write("	}\n");
      out.write("}\n");
      out.write("\n");
      out.write("function setShowDescriptions(value) {\n");
      out.write("	setCookie(\"showDescriptions\", value);\n");
      out.write("	var newValue = isShowDescriptions();   	\n");
      out.write("	parent.searchToolbarFrame.setButtonState(\"show_descriptions\", newValue);\n");
      out.write("	if (value != newValue) {\n");
      out.write("	    alert(cookiesRequired);\n");
      out.write("	} else { \n");
      out.write("	    setCSSRule(\".description\", \"display\", value ? \"block\" : \"none\");\n");
      out.write("	}\n");
      out.write("}\n");
      out.write("\n");
      out.write("function toggleShowCategories() {\n");
      out.write("	setShowCategories(!showCategories);\n");
      out.write("}\n");
      out.write("\n");
      out.write("function toggleShowLocations() {\n");
      out.write("	setShowLocations(!isShowLocations());\n");
      out.write("}\n");
      out.write("\n");
      out.write("function toggleShowDescriptions() {\n");
      out.write("	setShowDescriptions(!isShowDescriptions());\n");
      out.write("}\n");
      out.write("\n");
      out.write("function onShow() { \n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body dir=\"");
      out.print(direction);
      out.write("\">\n");
      out.write("\n");

	String preResults = data.getPreProcessorResults();

	if (!preResults.equals(""))
	{
		out.write(preResults);
		out.write("<HR/>");
	}


if (!data.isSearchRequest()) {
	out.write(ServletResources.getString("doSearch", request));
} else if (data.getQueryExceptionMessage()!=null) {
	out.write(data.getQueryExceptionMessage());
} else if (data.isProgressRequest()) {

      out.write("\n");
      out.write("\n");
      out.write("<CENTER>\n");
      out.write("<TABLE BORDER='0'>\n");
      out.write("	<TR><TD>");
      out.print(ServletResources.getString("Indexing", request));
      out.write("</TD></TR>\n");
      out.write("	<TR><TD ALIGN='");
      out.print(isRTL?"RIGHT":"LEFT");
      out.write("'>\n");
      out.write("		<DIV STYLE='width:100px;height:16px;border:1px solid ThreeDShadow;'>\n");
      out.write("			<DIV ID='divProgress' STYLE='width:");
      out.print(data.getIndexedPercentage());
      out.write("px;height:100%;background-color:Highlight'></DIV>\n");
      out.write("		</DIV>\n");
      out.write("	</TD></TR>\n");
      out.write("	<TR><TD>");
      out.print(data.getIndexedPercentage());
      out.write('%');
      out.write(' ');
      out.print(ServletResources.getString("complete", request));
      out.write("</TD></TR>\n");
      out.write("	<TR><TD><br>");
      out.print(ServletResources.getString("IndexingPleaseWait", request));
      out.write("</TD></TR>\n");
      out.write("</TABLE>\n");
      out.write("</CENTER>\n");
      out.write("<script language='JavaScript'>\n");
      out.write("setTimeout('refresh()', 2000);\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");

	return;
} else if (data.getResultsCount() == 0){
	out.write(UrlUtil.htmlEncode(data.getNotFoundMessage()));   
    if (data.isScopeActive()) {

      out.write("\n");
      out.write("<a class=\"showall\" onclick=\"showAll();\" >");
      out.print(ServletResources.getString("showAllLink", request));
      out.write("</a>\n");

    }
} else { // data.getResultsCount() != 0

      out.write("\n");
      out.write("<p><b>");
      out.print(UrlUtil.htmlEncode(data.getMatchesInScopeMessage()));
      out.write("</b>\n");

    if (data.isScopeActive()) {

      out.write("\n");
      out.write("&nbsp;<a class=\"showall\" onclick=\"showAll();\" >");
      out.print(ServletResources.getString("showAllLink", request));
      out.write("</a>\n");
 
    } else {

      out.write("\n");
      out.write("    &nbsp;<a class=\"showall\" onclick=\"rescope();\" >");
      out.print(ServletResources.getString("changeScopeLink", request));
      out.write("</a>\n");

    }

      out.write("\n");
      out.write("</p>\n");
      out.write("\n");
      out.write("\n");
      out.write("<table class=\"results\" cellspacing='0'>\n");
      out.write("\n");

	String oldCat = null;
	for (int topic = 0; topic < data.getResultsCount(); topic++)
	{
		if(data.isActivityFiltering() && !data.isEnabled(topic)){
			continue;
		}

		String cat = data.getCategoryLabel(topic);
		if (data.isShowCategories() && cat != null
				&& (oldCat == null || !oldCat.equals(cat))) {

      out.write("\n");
      out.write("\n");
      out.write("</table>\n");
      out.write("<table class=\"category\" cellspacing='0'>\n");
      out.write("	<tr class='list' id='r");
      out.print(topic);
      out.write("c'>\n");
      out.write("		<td>\n");
      out.write("			<a href=\"");
      out.print(UrlUtil.htmlEncode(data.getCategoryHref(topic)));
      out.write("\"\n");
      out.write("					id=\"a");
      out.print(topic);
      out.write("c\"'\n");
      out.write("					class=\"link\"\n");
      out.write("					onmouseover=\"showStatus(event);return true;\"\n");
      out.write("					onmouseout=\"clearStatus();return true;\">\n");
      out.write("				");
      out.print(UrlUtil.htmlEncode(cat));
      out.write("\n");
      out.write("			</a>\n");
      out.write("		</td>\n");
      out.write("	</tr>\n");
      out.write("</table>\n");
      out.write("<table class=\"results\" cellspacing='0'>\n");
      out.write("\n");

			oldCat = cat;
		}

      out.write("\n");
      out.write("\n");
      out.write("<tr class='list' id='r");
      out.print(topic);
      out.write("'>\n");
      out.write("	<td class='icon'>\n");
      out.write("\n");

		boolean isPotentialHit = data.isPotentialHit(topic);
		if (isPotentialHit) {

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("	<img src=\"");
      out.print(prefs.getImagesDirectory());
      out.write("/d_topic.svg\" alt=\"\"/>\n");
      out.write("\n");

		}
		else {

      out.write("\n");
      out.write("\n");
      out.write("	<img src=\"");
      out.print(prefs.getImagesDirectory());
      out.write("/topic.svg\" alt=\"\"/>\n");
      out.write("\n");

		}

      out.write("\n");
      out.write("\n");
      out.write("	</td>\n");
      out.write("	<td align='");
      out.print(isRTL?"right":"left");
      out.write("'>\n");
      out.write("		<a class='link' id='a");
      out.print(topic);
      out.write("' \n");
      out.write("		   href=\"");
      out.print(UrlUtil.htmlEncode(data.getTopicHref(topic)));
      out.write("\" \n");
      out.write("		   onmouseover=\"showStatus(event);return true;\"\n");
      out.write("		   onmouseout=\"clearStatus();return true;\"\n");
      out.write("		   title=\"");
      out.print(data.getTopicTocLabel(topic));
      out.write("\">\n");
      out.write("\n");

		String label = null;
		if (isPotentialHit) {
            label = ServletResources.getString("PotentialHit", data.getTopicLabel(topic), request);
        }
        else {
            label = data.getTopicLabel(topic);
        }

      out.write("\n");
      out.write("\n");
      out.write("        ");
      out.print(label);
      out.write("</a>\n");
      out.write("	</td>\n");
      out.write("</tr>\n");

			// location breadcrumb
			
      out.write("<tr><td class='icon'></td><td><div class=\"location\">");

			SearchHit hit = data.getResults()[topic];

			// book
			if (!data.isShowCategories()) {
				
      out.write("<a href=\"");
      out.print(UrlUtil.htmlEncode(data.getCategoryHref(topic)));
      out.write('"');
      out.write('>');
      out.print(UrlUtil.htmlEncode(hit.getToc().getLabel()));
      out.write("</a> &#8250; ");

			}

			// chapters
			String href = hit.getHref();
			int queryPartStart = href.indexOf('?');
			if (queryPartStart >= 0) {
				href = href.substring(0, queryPartStart);
			}
			int[] path = UrlUtil.getTopicPath("/topic" + href,
			                                  ServletResources.getString("locale", request));
			IUAElement node = hit.getToc();
			for (int i = 1; path != null && i < path.length - 1; i++) {
				node = node.getChildren()[path[i]];
				if (node instanceof IHelpResource) {
					IHelpResource breadcrumbItem = (IHelpResource) node;
					if (i > 1) {
						
      out.write(" &#8250; ");

					}
					String itemHref = breadcrumbItem.getHref();
					if (itemHref == null) {
						itemHref = "../nav/";
						for (int j = 0; j <= i; j++) {
							if (j > 0) {
								itemHref += "_";
							}
							itemHref += path[j];
						}
					} else {
						itemHref = UrlUtil.getHelpURL(itemHref);
					}
					
      out.write("<a href=\"");
      out.print(UrlUtil.htmlEncode(itemHref));
      out.write('"');
      out.write('>');
      out.print(UrlUtil.htmlEncode(breadcrumbItem.getLabel()));
      out.write("</a>");

				}
			}
			
      out.write("</div></td></tr>");


		String desc = data.getTopicDescription(topic);
		if (desc!=null) {

      out.write("\n");
      out.write("<tr id='d");
      out.print(topic);
      out.write("'>\n");
      out.write("	<td class='icon'>\n");
      out.write("	</td>\n");
      out.write("	<td align='");
      out.print(isRTL?"right":"left");
      out.write("'>\n");
      out.write("		<div class=\"description\">\n");
      out.write("			");
      out.print(desc);
      out.write("\n");
      out.write("		</div>\n");
      out.write("	</td>\n");
      out.write("</tr>\n");

		}
	}

      out.write("\n");
      out.write("</table>\n");
      out.write("\n");

}

      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("	selectTopicById('");
      out.print(UrlUtil.JavaScriptEncode(data.getSelectedTopicId()));
      out.write("');\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
